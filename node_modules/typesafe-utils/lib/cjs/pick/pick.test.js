"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const uvu_1 = require("uvu");
const assert = __importStar(require("uvu/assert"));
const pick_1 = require("./pick");
const test = uvu_1.suite('pick');
// pick -----------------------------------------------------------------------------------------------
test(`pick inStock`, () => {
    const items = [
        { available: 'some-id', inStock: true },
        { available: true, inStock: true },
        { available: 'some-id', inStock: false },
        { available: null, inStock: true },
    ];
    const filteredItems = items.map(pick_1.pick('inStock'));
    filteredItems.forEach(item => assert.is(typeof item, 'boolean'));
    assert.is(filteredItems.filter(item => item === true).length, 3);
    assert.is(filteredItems.filter(item => item === false).length, 1);
});
test(`pick length`, () => {
    const items = ["string", "another-string", ""];
    const filteredItems = items.map(pick_1.pick('length'));
    filteredItems.forEach(item => assert.is(typeof item, 'number'));
    assert.is(filteredItems[0], 6);
    assert.is(filteredItems[1], 14);
    assert.is(filteredItems[2], 0);
});
test.run();
