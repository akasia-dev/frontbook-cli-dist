"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const uvu_1 = require("uvu");
const assert = __importStar(require("uvu/assert"));
const isBoolean_1 = require("./isBoolean");
const test = uvu_1.suite('isBoolean');
// isBoolean ----------------------------------------------------------------------------------------------------------
const items = ['test', { prop: 0 }, null, undefined, true, {}, 0, 123, false, ''];
test(`isBoolean`, () => {
    const filteredItems = items.filter(isBoolean_1.isBoolean);
    assert.ok(filteredItems.length === 2);
    assert.is(filteredItems[0], true);
    assert.is(filteredItems[1], false);
});
const onlyBooleans = items.filter(isBoolean_1.isBoolean);
onlyBooleans[0] && onlyBooleans[0] === true;
test.run();
