"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const uvu_1 = require("uvu");
const assert = __importStar(require("uvu/assert"));
const uniqueArray_1 = require("./uniqueArray");
const test = uvu_1.suite('uniqueArray');
// --------------------------------------------------------------------------------------------------------------------
const testUniqueArray = (input, expexted) => test('uniqueArray', () => assert.equal(uniqueArray_1.uniqueArray(input), expexted));
testUniqueArray([], []);
testUniqueArray(['test'], ['test']);
testUniqueArray(['test', '123'], ['test', '123']);
testUniqueArray(['a', 'a'], ['a']);
testUniqueArray(['a', 'b', 'a', 'a'], ['a', 'b']);
testUniqueArray([123], [123]);
testUniqueArray([123, 456], [123, 456]);
testUniqueArray([1, 1], [1]);
testUniqueArray([1, 2, 1, 1], [1, 2]);
testUniqueArray([true, false], [true, false]);
testUniqueArray([true, true], [true]);
testUniqueArray([false, false, false], [false]);
testUniqueArray(['test', 123, true, null, false], ['test', 123, true, null, false]);
test.run();
