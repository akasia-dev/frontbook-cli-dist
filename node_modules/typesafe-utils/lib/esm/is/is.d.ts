import { TypeGuard } from '../types';
export declare const is: <T, U>(item: T) => (value: U) => value is TypeGuard<T, U>;
export declare const isNot: <T, U>(item: T) => (value: U) => value is U;
export declare const isProperty: <T, K extends keyof T = keyof T>(property: K, item: T[K]) => (value: T) => boolean;
export declare const isPropertyNot: <T, K extends keyof T = keyof T>(property: K, item: T[K]) => (value: T) => boolean;
