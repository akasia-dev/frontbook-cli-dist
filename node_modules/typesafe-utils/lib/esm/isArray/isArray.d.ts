export declare type TypeGuard<Guard, Type, ReturnType extends Type = Type> = Type extends Guard ? Type extends ReturnType ? Type : ReturnType : never;
export declare const isArray: <T>(value: T) => value is TypeGuard<unknown[], T, T>;
declare type NotEmptyArray<T> = [T, ...T[]];
export declare const isArrayNotEmpty: <T>(array: T[]) => array is NotEmptyArray<T>;
export declare const isArrayEmpty: <T>(array: T[]) => array is [];
export {};
